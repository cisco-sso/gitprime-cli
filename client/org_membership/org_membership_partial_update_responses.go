// Code generated by go-swagger; DO NOT EDIT.

package org_membership

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrgMembershipPartialUpdateReader is a Reader for the OrgMembershipPartialUpdate structure.
type OrgMembershipPartialUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrgMembershipPartialUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOrgMembershipPartialUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewOrgMembershipPartialUpdateOK creates a OrgMembershipPartialUpdateOK with default headers values
func NewOrgMembershipPartialUpdateOK() *OrgMembershipPartialUpdateOK {
	return &OrgMembershipPartialUpdateOK{}
}

/*OrgMembershipPartialUpdateOK handles this case with default header values.

OrgMembershipPartialUpdateOK org membership partial update o k
*/
type OrgMembershipPartialUpdateOK struct {
	Payload interface{}
}

func (o *OrgMembershipPartialUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /v3/customer/core/org_membership/{id}/][%d] orgMembershipPartialUpdateOK  %+v", 200, o.Payload)
}

func (o *OrgMembershipPartialUpdateOK) GetPayload() interface{} {
	return o.Payload
}

func (o *OrgMembershipPartialUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*OrgMembershipPartialUpdateBody org membership partial update body
swagger:model OrgMembershipPartialUpdateBody
*/
type OrgMembershipPartialUpdateBody struct {

	// depth
	Depth int64 `json:"depth,omitempty"`

	// grants
	// Required: true
	Grants []string `json:"grants"`

	// roles
	// Required: true
	Roles []string `json:"roles"`

	// scope
	Scope int64 `json:"scope,omitempty"`
}

// Validate validates this org membership partial update body
func (o *OrgMembershipPartialUpdateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateGrants(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRoles(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OrgMembershipPartialUpdateBody) validateGrants(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"grants", "body", o.Grants); err != nil {
		return err
	}

	return nil
}

func (o *OrgMembershipPartialUpdateBody) validateRoles(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"roles", "body", o.Roles); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *OrgMembershipPartialUpdateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OrgMembershipPartialUpdateBody) UnmarshalBinary(b []byte) error {
	var res OrgMembershipPartialUpdateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
