// Code generated by go-swagger; DO NOT EDIT.

package integrations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IntegrationsPartialUpdateReader is a Reader for the IntegrationsPartialUpdate structure.
type IntegrationsPartialUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IntegrationsPartialUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIntegrationsPartialUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewIntegrationsPartialUpdateOK creates a IntegrationsPartialUpdateOK with default headers values
func NewIntegrationsPartialUpdateOK() *IntegrationsPartialUpdateOK {
	return &IntegrationsPartialUpdateOK{}
}

/*IntegrationsPartialUpdateOK handles this case with default header values.

IntegrationsPartialUpdateOK integrations partial update o k
*/
type IntegrationsPartialUpdateOK struct {
	Payload interface{}
}

func (o *IntegrationsPartialUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /v3/customer/core/integrations/{id}/][%d] integrationsPartialUpdateOK  %+v", 200, o.Payload)
}

func (o *IntegrationsPartialUpdateOK) GetPayload() interface{} {
	return o.Payload
}

func (o *IntegrationsPartialUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*IntegrationsPartialUpdateBody integrations partial update body
swagger:model IntegrationsPartialUpdateBody
*/
type IntegrationsPartialUpdateBody struct {

	// auth data
	// Required: true
	AuthData *string `json:"authData"`

	// name
	Name string `json:"name,omitempty"`
}

// Validate validates this integrations partial update body
func (o *IntegrationsPartialUpdateBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAuthData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *IntegrationsPartialUpdateBody) validateAuthData(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"authData", "body", o.AuthData); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *IntegrationsPartialUpdateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *IntegrationsPartialUpdateBody) UnmarshalBinary(b []byte) error {
	var res IntegrationsPartialUpdateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
