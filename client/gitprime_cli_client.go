// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cisco-sso/gitprime-cli/client/available_repos"
	"github.com/cisco-sso/gitprime-cli/client/available_ticket_projects"
	"github.com/cisco-sso/gitprime-cli/client/commits"
	"github.com/cisco-sso/gitprime-cli/client/grants"
	"github.com/cisco-sso/gitprime-cli/client/group_settings"
	"github.com/cisco-sso/gitprime-cli/client/integrations"
	"github.com/cisco-sso/gitprime-cli/client/org_invites"
	"github.com/cisco-sso/gitprime-cli/client/org_membership"
	"github.com/cisco-sso/gitprime-cli/client/pull_request_comments"
	"github.com/cisco-sso/gitprime-cli/client/pull_request_events"
	"github.com/cisco-sso/gitprime-cli/client/pull_request_projects"
	"github.com/cisco-sso/gitprime-cli/client/pull_requests"
	"github.com/cisco-sso/gitprime-cli/client/repos"
	"github.com/cisco-sso/gitprime-cli/client/roles"
	"github.com/cisco-sso/gitprime-cli/client/tags"
	"github.com/cisco-sso/gitprime-cli/client/targets"
	"github.com/cisco-sso/gitprime-cli/client/team_membership"
	"github.com/cisco-sso/gitprime-cli/client/teams"
	"github.com/cisco-sso/gitprime-cli/client/ticket_comments"
	"github.com/cisco-sso/gitprime-cli/client/ticket_events"
	"github.com/cisco-sso/gitprime-cli/client/ticket_projects"
	"github.com/cisco-sso/gitprime-cli/client/tickets"
	"github.com/cisco-sso/gitprime-cli/client/user_alias"
	"github.com/cisco-sso/gitprime-cli/client/user_groups"
	"github.com/cisco-sso/gitprime-cli/client/users"
)

// Default gitprime cli HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "flow.pluralsight.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new gitprime cli HTTP client.
func NewHTTPClient(formats strfmt.Registry) *GitprimeCli {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new gitprime cli HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *GitprimeCli {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new gitprime cli client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *GitprimeCli {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(GitprimeCli)
	cli.Transport = transport
	cli.AvailableRepos = available_repos.New(transport, formats)
	cli.AvailableTicketProjects = available_ticket_projects.New(transport, formats)
	cli.Commits = commits.New(transport, formats)
	cli.Grants = grants.New(transport, formats)
	cli.GroupSettings = group_settings.New(transport, formats)
	cli.Integrations = integrations.New(transport, formats)
	cli.OrgInvites = org_invites.New(transport, formats)
	cli.OrgMembership = org_membership.New(transport, formats)
	cli.PullRequestComments = pull_request_comments.New(transport, formats)
	cli.PullRequestEvents = pull_request_events.New(transport, formats)
	cli.PullRequestProjects = pull_request_projects.New(transport, formats)
	cli.PullRequests = pull_requests.New(transport, formats)
	cli.Repos = repos.New(transport, formats)
	cli.Roles = roles.New(transport, formats)
	cli.Tags = tags.New(transport, formats)
	cli.Targets = targets.New(transport, formats)
	cli.TeamMembership = team_membership.New(transport, formats)
	cli.Teams = teams.New(transport, formats)
	cli.TicketComments = ticket_comments.New(transport, formats)
	cli.TicketEvents = ticket_events.New(transport, formats)
	cli.TicketProjects = ticket_projects.New(transport, formats)
	cli.Tickets = tickets.New(transport, formats)
	cli.UserAlias = user_alias.New(transport, formats)
	cli.UserGroups = user_groups.New(transport, formats)
	cli.Users = users.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// GitprimeCli is a client for gitprime cli
type GitprimeCli struct {
	AvailableRepos available_repos.ClientService

	AvailableTicketProjects available_ticket_projects.ClientService

	Commits commits.ClientService

	Grants grants.ClientService

	GroupSettings group_settings.ClientService

	Integrations integrations.ClientService

	OrgInvites org_invites.ClientService

	OrgMembership org_membership.ClientService

	PullRequestComments pull_request_comments.ClientService

	PullRequestEvents pull_request_events.ClientService

	PullRequestProjects pull_request_projects.ClientService

	PullRequests pull_requests.ClientService

	Repos repos.ClientService

	Roles roles.ClientService

	Tags tags.ClientService

	Targets targets.ClientService

	TeamMembership team_membership.ClientService

	Teams teams.ClientService

	TicketComments ticket_comments.ClientService

	TicketEvents ticket_events.ClientService

	TicketProjects ticket_projects.ClientService

	Tickets tickets.ClientService

	UserAlias user_alias.ClientService

	UserGroups user_groups.ClientService

	Users users.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *GitprimeCli) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.AvailableRepos.SetTransport(transport)
	c.AvailableTicketProjects.SetTransport(transport)
	c.Commits.SetTransport(transport)
	c.Grants.SetTransport(transport)
	c.GroupSettings.SetTransport(transport)
	c.Integrations.SetTransport(transport)
	c.OrgInvites.SetTransport(transport)
	c.OrgMembership.SetTransport(transport)
	c.PullRequestComments.SetTransport(transport)
	c.PullRequestEvents.SetTransport(transport)
	c.PullRequestProjects.SetTransport(transport)
	c.PullRequests.SetTransport(transport)
	c.Repos.SetTransport(transport)
	c.Roles.SetTransport(transport)
	c.Tags.SetTransport(transport)
	c.Targets.SetTransport(transport)
	c.TeamMembership.SetTransport(transport)
	c.Teams.SetTransport(transport)
	c.TicketComments.SetTransport(transport)
	c.TicketEvents.SetTransport(transport)
	c.TicketProjects.SetTransport(transport)
	c.Tickets.SetTransport(transport)
	c.UserAlias.SetTransport(transport)
	c.UserGroups.SetTransport(transport)
	c.Users.SetTransport(transport)
}
