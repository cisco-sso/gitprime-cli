// Code generated by go-swagger; DO NOT EDIT.

package org_invites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new org invites API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for org invites API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	OrgInvitesBulkCreate(params *OrgInvitesBulkCreateParams, authInfo runtime.ClientAuthInfoWriter) (*OrgInvitesBulkCreateCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  OrgInvitesBulkCreate invites users via email

  Invite Users via email

To invite multiple users pass in string of comma separated emails: "example1@gmail.com, example2@gmail.com"

For intended_role pass in an array of role ids.  To view available Roles use
the roles API.

These roles have associated grants with them. For custom grants use intended_grants and pass in
an array of grant ids. To view available Grants use the grants API.

Visibility Level:

Use intended_scope to change which teams users see by default. If left out, defaults to all teams.

    USER - see only my data
    TEAM - see my teams data
    ALL - see any teams data

Individual contributor metrics:

Use intended_depth to change if users can see individual users' metrics. If left out, defaults to yes.

    NONE - user see nothing past themselves
    AGGREGATE  - view general data metrics (teams active days per week)
    ATOMIC - view granular data metrics (Sandy's active days per week)
*/
func (a *Client) OrgInvitesBulkCreate(params *OrgInvitesBulkCreateParams, authInfo runtime.ClientAuthInfoWriter) (*OrgInvitesBulkCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrgInvitesBulkCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "org_invites_bulk_create",
		Method:             "POST",
		PathPattern:        "/v3/customer/core/org_invites/bulk_create/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrgInvitesBulkCreateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrgInvitesBulkCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for org_invites_bulk_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
