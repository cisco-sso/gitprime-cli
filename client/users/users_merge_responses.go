// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UsersMergeReader is a Reader for the UsersMerge structure.
type UsersMergeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UsersMergeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewUsersMergeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUsersMergeCreated creates a UsersMergeCreated with default headers values
func NewUsersMergeCreated() *UsersMergeCreated {
	return &UsersMergeCreated{}
}

/*UsersMergeCreated handles this case with default header values.

UsersMergeCreated users merge created
*/
type UsersMergeCreated struct {
	Payload interface{}
}

func (o *UsersMergeCreated) Error() string {
	return fmt.Sprintf("[POST /v3/customer/core/users/{id}/merge/][%d] usersMergeCreated  %+v", 201, o.Payload)
}

func (o *UsersMergeCreated) GetPayload() interface{} {
	return o.Payload
}

func (o *UsersMergeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UsersMergeBody users merge body
swagger:model UsersMergeBody
*/
type UsersMergeBody struct {

	// apex user ids
	ApexUserIds []string `json:"apex_user_ids"`

	// delete logins
	DeleteLogins bool `json:"delete_logins,omitempty"`

	// user alias ids
	UserAliasIds []string `json:"user_alias_ids"`
}

// Validate validates this users merge body
func (o *UsersMergeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UsersMergeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UsersMergeBody) UnmarshalBinary(b []byte) error {
	var res UsersMergeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
